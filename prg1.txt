from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# Load the Iris dataset
X, y = load_iris(return_X_y=True)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Create and train a k-NN classifier with k=3
knn = KNeighborsClassifier(n_neighbors=3).fit(X_train, y_train)

# Predict the labels for the test set
y_pred = knn.predict(X_test)

# Calculate the accuracy
accuracy = accuracy_score(y_test, y_pred)

# Print the correct and wrong predictions
for actual, predicted in zip(y_test, y_pred):
    result = "Correct" if actual == predicted else "Wrong"
    print(f"{result} Prediction: Actual = {actual}, Predicted = {predicted}")

# Print summary
print(f"Accuracy: {accuracy * 100:.2f}%")
print(f"Correct Predictions: {sum(y_test == y_pred)}")
print(f"Wrong Predictions: {sum(y_test != y_pred)}")